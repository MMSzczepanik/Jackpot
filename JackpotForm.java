/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jackpot;

import java.awt.Color;
import java.awt.Toolkit;
import static java.awt.event.KeyEvent.VK_DOWN;
import static java.awt.event.KeyEvent.VK_ENTER;
import static java.awt.event.KeyEvent.VK_LEFT;
import static java.awt.event.KeyEvent.VK_PLUS;
import static java.awt.event.KeyEvent.VK_RIGHT;
import static java.awt.event.KeyEvent.VK_UP;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Collections;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JButton;
import javax.swing.JLabel;

/**
 *
 * @author Yogi
 */
public class JackpotForm extends javax.swing.JFrame {

    /**
     * Creates new form JackpotForm
     */
    public JackpotForm(){
         initComponents();
         setVisible(false);
         new StartFrame();
    }
    
    public JackpotForm(String DataBaseName) {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource(IconName)));
        initComponents();
        setVisible(true);
        this.DataBaseName = DataBaseName;
        
        for(int i=121;i<=162;i++){
            numery.add(i);
        }
        numery.add(164);
        numery.add(165);
        numery.add(167);
        numery.add(168);
        numery.add(170);
        numery.add(171);
        numery.add(174);
        numery.add(177);
        numery.add(180);
        
        loader(Player1, Player2, Player3, Liczba, jChecksLabel, Los, AddButton);
        
        String sql = "SELECT NAME FROM Player GROUP BY (NAME);";
       try{
           ResultSet rs = stmt.executeQuery(sql);
           while(rs.next()){
                jPlayerBox.addItem(rs.getString("NAME"));
            }
       }catch(SQLException e){
           
       }
       
       Stat.setText(String.format("Liczba zawodników: %d      Liczba losów: %d", zawodnicy.size(), lista.size()));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        AddButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        Name = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        Count = new javax.swing.JTextField();
        Los = new javax.swing.JButton();
        Player3 = new javax.swing.JLabel();
        Liczba = new javax.swing.JLabel();
        Player2 = new javax.swing.JLabel();
        Player1 = new javax.swing.JLabel();
        Stat = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jChecksLabel = new javax.swing.JLabel();
        jPlayerBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Red Joker Jackpot");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(400, 500));

        jPanel2.setMinimumSize(new java.awt.Dimension(400, 467));
        jPanel2.setPreferredSize(new java.awt.Dimension(400, 467));

        AddButton.setText(" Dodaj zawodnika");
        AddButton.setToolTipText("Dodaje zawodnika");
        AddButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AddButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                AddButtonFocusGained(evt);
            }
        });
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Zawodnik");

        Name.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                NameCaretUpdate(evt);
            }
        });
        Name.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                NameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                NameFocusLost(evt);
            }
        });
        Name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NameMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                NameMousePressed(evt);
            }
        });
        Name.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                NameCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                NameInputMethodTextChanged(evt);
            }
        });
        Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameActionPerformed(evt);
            }
        });
        Name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                NameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                NameKeyReleased(evt);
            }
        });

        jLabel2.setText("Ilość");

        Count.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CountActionPerformed(evt);
            }
        });
        Count.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CountKeyPressed(evt);
            }
        });

        Los.setText("Losuj");
        Los.setToolTipText("Losuje zawodników Jackpota");
        Los.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Los.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LosActionPerformed(evt);
            }
        });

        Player3.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        Player3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Player3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Zawodnik 3", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(153, 153, 153))); // NOI18N

        Liczba.setBackground(new java.awt.Color(102, 102, 102));
        Liczba.setFont(new java.awt.Font("Comic Sans MS", 0, 36)); // NOI18N
        Liczba.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Liczba.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Liczba Jackpot", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(153, 153, 153))); // NOI18N
        Liczba.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        Player2.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        Player2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Player2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Zawodnik 2", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(153, 153, 153))); // NOI18N

        Player1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        Player1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Player1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Zawodnik 1", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(153, 153, 153))); // NOI18N

        Stat.setBackground(new java.awt.Color(102, 102, 102));
        Stat.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Statystyka", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(153, 153, 153))); // NOI18N

        jButton1.setText("Pokaż losy");
        jButton1.setToolTipText("Wyświetla statystyki");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Autor: Michał \"Yogi\" Szczepanik");

        jScrollPane2.setViewportView(jChecksLabel);

        jPlayerBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPlayerBoxMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPlayerBoxMousePressed(evt);
            }
        });
        jPlayerBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPlayerBoxKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Player3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Los, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Player1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Player2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Liczba, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane2)
                                    .addComponent(AddButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(Stat, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPlayerBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Name, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE))
                .addGap(109, 109, 109)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Count, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jPlayerBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Count, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(60, 60, 60)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Los, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(AddButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(Player1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Player2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Player3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(Liczba, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Stat, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(5, 5, 5)
                .addComponent(jLabel3))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LosActionPerformed

    if(lista.size()>=3){  
        AddButton.setEnabled(false);
        Los.setEnabled(false);
        Collections.shuffle(numery);
        Liczba.setText(numery.get(0).toString());
        
        List<String> checksList = new ArrayList<String>(Checker.getChecksList(numery.get(0)));
        String label = "<html>";
        
        for(String s :checksList){
            label += s + "<br>";
        }
        
        label += "     </html>";
        jChecksLabel.setText(label);
        
      
            Collections.shuffle(lista);
            Player1.setText(lista.get(0));
            Player2.setText(lista.get(1));
            Player3.setText(lista.get(2));  
            
                try{
                    String sql = "INSERT INTO Jackpot VALUES ('"+DataBaseName+"','" + lista.get(0) + "','" + lista.get(1) +"','" + lista.get(2) +"',"+ Liczba.getText() +");";
                    stmt.executeUpdate(sql);
                }catch(SQLException e){
                    try{
                    String sql = "DELETE FROM Jackpot WHERE ID = '" + DataBaseName + "';";
                    stmt.executeUpdate(sql);
                    sql = "INSERT INTO Jackpot VALUES ('"+DataBaseName+"','" + lista.get(0) + "','" + lista.get(1) +"','" + lista.get(2) +"',"+ Liczba.getText() +");";
                    stmt.executeUpdate(sql);
                    } catch (SQLException ex) {
                        new WarningFrame("Problem z bazą danych !");
                    }   
            }
        }else {
            new WarningFrame("Za mało zawodników");
        }
        

        // TODO add your handling code here:
    }//GEN-LAST:event_LosActionPerformed

    private void CountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CountActionPerformed

    private void NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameActionPerformed
        
    
    }//GEN-LAST:event_NameActionPerformed

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed

        
        if(Name.getText().isEmpty() && jPlayerBox.getItemCount()!=0) Name.setText(jPlayerBox.getSelectedItem().toString());
        
        if(Name.getText().isEmpty() && jPlayerBox.getItemCount()==0) new WarningFrame("Wprowadź zawodnika");
        
        if((!Name.getText().isEmpty() || jPlayerBox.getItemCount()!=0) && !Count.getText().isEmpty()){
            
            if(Pattern.matches("[1-9][0-9]*", Count.getText())){
                try{
                    String insert;
                    if(!(lista.contains(Name.getText()))) insert ="INSERT INTO Player (TNAME,NAME,LOS) VALUES ('" + DataBaseName + "','" + Name.getText() + "'," + Count.getText() + ");";
                    else insert = "UPDATE Player SET LOS = LOS + "+ Count.getText()+" WHERE NAME = '"+ Name.getText() +"' AND TNAME = '" + DataBaseName + "';";
                    stmt.executeUpdate(insert);
                    new ButtonThread(AddButton,Color.green).start();
                }catch(SQLException e){

                        System.err.println(e);

                }
                Integer size = new Integer(Count.getText());
                for(int i=0; i<size;i++){
                    lista.add(Name.getText());
                    zawodnicy.add(Name.getText());
                }
                Count.setText("1"); Name.setText(""); jPlayerBox.setEnabled(true);
                Stat.setText(String.format("Liczba zawodników: %d      Liczba losów: %d", zawodnicy.size(), lista.size()));   
            }else{
                new WarningFrame("Podałeś źle ilość losów!");
                Count.setText("1");
            }
        }
            
        if((!Name.getText().isEmpty() || jPlayerBox.getItemCount()!=0) && Count.getText().isEmpty()){ 
            
            try{
                
                String insert;
               if(!(lista.contains(Name.getText()))) insert ="INSERT INTO Player (TNAME,NAME,LOS) VALUES ('" + DataBaseName + "','" + Name.getText() + "',1);";
                else insert = "UPDATE Player SET LOS = LOS + 1 WHERE NAME = '"+ Name.getText() +"' AND TNAME = '" + DataBaseName + "';";
                stmt.executeUpdate(insert);
                new ButtonThread(AddButton,Color.green).start();
            }catch(SQLException e){
                
                    System.err.println(e);
                
            }
            lista.add(Name.getText());
            zawodnicy.add(Name.getText());
            Count.setText("1"); Name.setText(""); jPlayerBox.setEnabled(true);
            Stat.setText(String.format("Liczba zawodników: %d      Liczba losów: %d", zawodnicy.size(), lista.size()));
            
            
        }
        
        
        if(!lista.isEmpty()){
              jPlayerBox.removeAllItems();
                String sql = "SELECT NAME FROM Player GROUP BY (NAME);";
                try{
                    ResultSet rs = stmt.executeQuery(sql);
                    while(rs.next()){
                        jPlayerBox.addItem(rs.getString("NAME"));
                    }
                }catch(SQLException e){
           
                }
            }
        
        
    }//GEN-LAST:event_AddButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

    
        new StatisticFrame();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void NameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NameKeyPressed

        if(evt.getKeyCode()==VK_ENTER){
            AddButton.doClick();
        }
        if(evt.getKeyCode()==VK_UP){
            if(Count.getText().isEmpty()){
                Count.setText("1");
            }else{
                int count = Integer.parseInt(Count.getText())+1;
                Count.setText(String.valueOf(count));
            } 
        }
        if(evt.getKeyCode()==VK_DOWN){
            if(Count.getText().isEmpty()){
            }else{
                    int count = Integer.parseInt(Count.getText())-1;
                    if(count<=0) count = 0;
                    Count.setText(String.valueOf(count));
            } 
        }
        
        if(evt.getKeyCode()==VK_RIGHT){
            Count.requestFocus();
        }
        
    }//GEN-LAST:event_NameKeyPressed

    private void NameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NameKeyReleased

         if(Name.getText().isEmpty()){
             jPlayerBox.setEnabled(true);
        }else{
            jPlayerBox.setEnabled(false);
        }
        
    }//GEN-LAST:event_NameKeyReleased

    private void NameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NameMouseClicked
    
    }//GEN-LAST:event_NameMouseClicked

    private void jPlayerBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPlayerBoxMouseClicked
      
    }//GEN-LAST:event_jPlayerBoxMouseClicked

    private void NameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NameMousePressed
        
    }//GEN-LAST:event_NameMousePressed

    private void jPlayerBoxMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPlayerBoxMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPlayerBoxMousePressed

    private void NameCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_NameCaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_NameCaretUpdate

    private void NameCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_NameCaretPositionChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_NameCaretPositionChanged

    private void NameInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_NameInputMethodTextChanged

            
        
    }//GEN-LAST:event_NameInputMethodTextChanged

    private void NameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_NameFocusGained
        // TODO add your handling code here:
        if(Name.getText().isEmpty()){
             jPlayerBox.setEnabled(true);
        }else{
            jPlayerBox.setEnabled(false);
        }
       
    }//GEN-LAST:event_NameFocusGained

    private void NameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_NameFocusLost
        // TODO add your handling code here:
        if(Name.getText().isEmpty()){
             jPlayerBox.setEnabled(true);
        }else{
            jPlayerBox.setEnabled(false);
        }
    }//GEN-LAST:event_NameFocusLost

    private void AddButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_AddButtonFocusGained
    
    }//GEN-LAST:event_AddButtonFocusGained

    private void CountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CountKeyPressed

        if(evt.getKeyCode()==VK_ENTER){
            AddButton.doClick();
        }
        if(evt.getKeyCode()==VK_LEFT){
            Name.requestFocus();
        }
        if(evt.getKeyCode()==VK_UP){
            if(Count.getText().isEmpty()){
                Count.setText("1");
            }else{
                int count = Integer.parseInt(Count.getText())+1;
                Count.setText(String.valueOf(count));
            } 
        }
        if(evt.getKeyCode()==VK_DOWN){
            if(Count.getText().isEmpty()){
            }else{
                    int count = Integer.parseInt(Count.getText())-1;
                    if(count<=0) count = 0;
                    Count.setText(String.valueOf(count));
            } 
        }
    }//GEN-LAST:event_CountKeyPressed

    private void jPlayerBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPlayerBoxKeyPressed

        if(evt.getKeyCode()==VK_ENTER){
            AddButton.doClick();
        }
    }//GEN-LAST:event_jPlayerBoxKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JackpotForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JackpotForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JackpotForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JackpotForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JackpotForm();
                
            }
        });
    }

    
    public static void loader(JLabel Player1, JLabel Player2, JLabel Player3, JLabel Liczba, JLabel jChecksLabel, JButton Los, JButton AddButton){
        String sql = "SELECT * FROM Player WHERE TNAME = '" + DataBaseName + "';";
        try{
            ResultSet rs = stmt.executeQuery(sql);
            while(rs.next()){
                String database = rs.getString("TNAME");
                String player = rs.getString("NAME");
                int nr = rs.getInt("LOS");
                for(int i=0;i<nr;i++){
                    lista.add(player);
                    zawodnicy.add(player);
                }
            }
            sql = "SELECT PLAYER1, PLAYER2, PLAYER3, LICZBA "
                    + "FROM Jackpot "
                    + "WHERE ID = '" + DataBaseName + "';";
            rs = stmt.executeQuery(sql);
            Player1.setText(rs.getString("PLAYER1"));
            Player2.setText(rs.getString("PLAYER2"));
            Player3.setText(rs.getString("PLAYER3"));
            Liczba.setText(String.valueOf(rs.getInt("LICZBA")));
            if(!Player1.getText().isEmpty()){
                Los.setEnabled(false);
                AddButton.setEnabled(false);
            }
            
            List<String> checksList = new ArrayList<String>(Checker.getChecksList(Integer.parseInt(Liczba.getText())));
            String label = "<html>";

            for(String s :checksList){
                label += s + "<br>";
            }

            label += "     </html>";
            jChecksLabel.setText(label);

            }catch(SQLException e){
                System.err.println(e);
            }
    }
    
    
    
    public static void dbloader(){
        try{
            Class.forName("org.sqlite.JDBC");
            conn = DriverManager.getConnection("jdbc:sqlite:JPdatabase.db");
            stmt = conn.createStatement();
            System.out.println("Połączono z bazą");
            String sql = "CREATE TABLE IF NOT EXISTS Player "
                        + "(ID INTEGER AUTO_INCREMENT,"
                        + " TNAME VARCHAR(50) NOT NULL,"
                        + " NAME VARCHAR(30) NOT NULL ,"
                        + " LOS INT NOT NULL,"
                        + "PRIMARY KEY (ID))";
            stmt.executeUpdate(sql);
                        String sql1 = "CREATE TABLE IF NOT EXISTS Jackpot "
                        + "(ID VARCHAR(50),"
                        + " PLAYER1 VARCHAR(50) NOT NULL,"
                        + " PLAYER2 VARCHAR(50) NOT NULL,"
                        + " PLAYER3 VARCHAR(50) NOT NULL," 
                        + " LICZBA INTEGER NOT NULL,"      
                        + "PRIMARY KEY (ID))";
            stmt.executeUpdate(sql1);            
        }catch(Exception e){
            System.err.print(e);
        }
    }
    
    
    static Connection conn = null;
    static Statement stmt = null;
    static List<String> lista = new ArrayList<String>();
    private List<Integer> numery = new ArrayList<Integer>();
    static LinkedHashSet<String> zawodnicy = new LinkedHashSet<String>(lista);
    public static String DataBaseName;
    
    static final String IconName = "RJicon.png";
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JTextField Count;
    private javax.swing.JLabel Liczba;
    private javax.swing.JButton Los;
    private javax.swing.JTextField Name;
    private javax.swing.JLabel Player1;
    private javax.swing.JLabel Player2;
    private javax.swing.JLabel Player3;
    private javax.swing.JLabel Stat;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jChecksLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JComboBox<String> jPlayerBox;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
